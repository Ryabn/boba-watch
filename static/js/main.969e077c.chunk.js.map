{"version":3,"sources":["components/textUtil.js","components/calculateStatistics.js","components/Dashboard.js","components/Add.js","components/User.js","components/DrinkPanel.js","components/History.js","components/Login.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["textUtil","toMoney","money","arguments","length","undefined","parseInt","getDefaultMetrics","metrics","numDrinks","totalCost","drinkAvg","drinks","Array","i","fill","updateMetrics","drinkObject","price","date","Date","getDay","getHours","calculateStatistics","liveReload","drinkObjects","drinksList","forEach","drink","localStorage","hasOwnProperty","id","push","setItem","JSON","stringify","recalculateMetrics","days","times","sunburstData","title","size","color","animation","children","getDailyData","dailyGraph","maxes","day","Math","max","apply","time","j","x","y","concat","Dashboard","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateInfo","fetch","userid","then","resp","json","stats","catch","err","swal","accessToken","window","location","href","origin","toString","parse","getItem","state","totalMoney","totalDrinks","drinkPercentage","userDrinkTotal","userCostTotal","monthSpendData","userId","setState","budget","maxDrinks","inherits","createClass","key","value","width","innerWidth","react_default","a","createElement","className","index_es","variant","Utils","es","height","data","padAngle","colorType","xType","yType","margin","orientation","style","stroke","strokeWidth","rectStyle","rx","ry","Component","Add","_getPrototypeOf2","_len","args","_key","selectedDate","handleDateChange","update","toggleSelf","saveDrink","name","document","getElementById","toISOString","photo","description","isNaN","method","headers","Accept","Content-Type","body","label","material_ui_pickers_esm","utils","DateFnsUtils","format","onChange","onClick","withRouter","User","userSpendMax","userDrinkMax","updateUser","user","handleChange","event","defineProperty","target","_this2","src","alt","DrinkPanel","open","add","toggle","toggleAdd","hasImage","trim","delete","axios","post","getNewInfo","edit","substr","ExpandLess_default","ExpandMore_default","toDateString","Collapse_default","in","History","retrieveHistory","generate","console","log","map","sum","newDrinks","e","components_DrinkPanel","Login","successfulLogin","fbRes","storeData","picture","url","avatar","clear","history","responseFacebook","servRes","facebook_login_with_button_default","appId","autoLoad","cookies","fields","callback","theme","createMuiTheme","overrides","MuiButton","text","backgroundColor","borderRadius","border","padding","boxShadow","fontFamily","fontWeight","fontSize","MuiBottomNavigation","root","MuiBottomNavigationAction","iconOnly","wrapper","palette","primary","main","contrastText","secondary","typography","useNextVariants","h1","marginBottom","h2","h3","h4","h5","h6","App","toggleUser","styles","react_router","basename","process","initialEntries","initialIndex","exact","strict","path","render","components_Login","components_Dashboard","components_History","onBackdropClick","components_Add","components_User","component","Link","to","icon","BarChart_default","disableRipple","onClose","refocus","Add_default","AttachMoney_default","Boolean","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.969e077c.chunk.js","sourcesContent":["/**\n * @function toMoney - parses int value and displays decimal format\n * @param {*} money \n */\nfunction toMoney(money, short = false){\n    if(short){\n        return parseInt(money/100);\n    }\n    return parseInt(money/100) + '.' + (money % 100 < 10 ? \"0\" + money % 100 : money % 100);\n}\nexport default {\n    toMoney: toMoney\n}","/**\n * @file calculateStatistics.js\n * @copyright Ryan Yang 2019\n * @summary - A set of functions to help calculate metrics for user's drink objects\n */\n\n/**\n * @function getDefaultMetrics - returns an emtpy metrics object. Called during\n * metric recalcuation when starting from nothing. \n * NOTE @note - drinks member should be a 2d array of 168 objects (7x24) of day by time\n * Array(7).fill(Array(24).fill(0)) creates 7 references to the same array and therefore\n * will not work as intended\n */\nfunction getDefaultMetrics(){\n    let metrics = {\n        'numDrinks': 0,\n        'totalCost': 0,\n        'drinkAvg': 0,\n        'drinks': Array(7)\n    }\n    for(let i = 0; i < 7; i++){\n        metrics.drinks[i] = Array(24).fill(0);\n    }\n    return metrics\n}\n\n/**\n * @function recalculateMetrics - Completely recalculates all the data for all the drinks.\n * Should only be called during testing and first time loads on a new device. If old data\n * is stored, should call liveReload function instead\n * @param {*} drinkObjects \n */\nfunction recalculateMetrics(drinkObjects){\n    let drinksList = [];\n    let metrics = getDefaultMetrics();\n    drinkObjects.forEach(drink => {\n        updateMetrics(drink, metrics);\n        drinksList.push(drink.id);\n        localStorage.setItem(drink.id, JSON.stringify(drink));\n    });\n    localStorage.setItem('drinksList', JSON.stringify(drinksList));\n    return metrics;\n}\n\n/**\n * @function updateMetrics - Updates the current metric object given a new drink\n * Should be called when \n * @param {*} drinkObject - single drink object to be included in calculations\n * @param {*} metrics - metrics object to be updated\n */\nfunction updateMetrics(drinkObject, metrics){\n    metrics.numDrinks += 1;\n    metrics.totalCost += drinkObject.price;\n    metrics.drinkAvg = metrics.totalCost / metrics.numDrinks;\n    let date = new Date(drinkObject.date);\n    metrics.drinks[date.getDay()][date.getHours() - 1] += 1;\n}\n\n/**\n * @function liveReload = Checks which drinks have been added that are new and only updates \n * those objects\n * @param {*} drinkObjects \n */\nfunction liveReload(drinkObjects, metrics){\n    let drinksList = [];\n    drinkObjects.forEach(drink => {\n        if(!localStorage.hasOwnProperty(drink.id)){\n            updateMetrics(drink, metrics);\n            drinksList.push(drink.id);\n            localStorage.setItem(drink.id, JSON.stringify(drink));\n        }\n    });\n    localStorage.setItem('drinksList', JSON.stringify(drinksList));\n    return metrics;\n}\n\nexport default {\n    'getDefaultMetrics': getDefaultMetrics,\n    'liveReload': liveReload,\n    'recalculateMetrics': recalculateMetrics,\n    'updateMetrics': updateMetrics\n}","import React, { Component } from 'react';\nimport {Typography, Card} from '@material-ui/core';\nimport { XYPlot, XAxis, YAxis, HeatmapSeries, Sunburst } from 'react-vis';\nimport Utils from './textUtil.js';\nimport stats from './calculateStatistics.js';\nimport swal from 'sweetalert';\nimport './styles/dashboard.css';\nimport 'react-vis/dist/style.css';\n\nconst days = [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ];\nconst times = [ \"1 AM\", \"2 AM\", \"3 AM\", \"4 AM\", \"5 AM\", \"6 AM\", \"7 AM\", \"8 AM\", \"9 AM\", \"10 AM\", \"11 AM\", \"12 AM\" ,\n                \"1 PM\", \"2 PM\", \"3 PM\", \"4 PM\", \"5 PM\", \"6 PM\", \"7 PM\", \"8 PM\", \"9 PM\", \"10 PM\", \"11 PM\", \"12 PM\" ];\n\nconst sunburstData = {\n    title: \"$3253\",\n    size: 0,\n    color: \"#FFFFFF\",\n    animation: true,\n    children: [\n        {\n            title: \"Progress\",\n            size: 75,\n            color: \"#32de44\",\n            animation: true,\n            children:[\n                {\n                    title: \"Padding\",\n                    size: 0,\n                    color: \"#FFFFFF\",\n                    animation: false\n                }\n            ]\n        },\n        {\n            title: \"Until Limit\",\n            size: 25,\n            color: \"#F4F4F4\",\n            animation: true\n        }\n    ]\n}\nfunction getDailyData(metrics){\n    let dailyGraph = [];\n    let maxes = [];\n    metrics.drinks.forEach(day => {maxes.push(Math.max.apply(null, day))});\n    let max = Math.max.apply(null, maxes);\n    metrics.drinks.forEach((day, i) => {\n        day.forEach((time, j) => {\n            dailyGraph.push({ x: days[i], y: times[j], color: `rgba(246, 128, 128, ${time === 0 ? 0.1 : (time)/max})`});\n        });\n    });\n    return dailyGraph;  \n}\nfunction getDailyTotal(metrics){\n    let totals = [{x: 1, y: 1}, {x: 2, y: 2}, {x: 3, y: 2}];\n    return totals;\n}\n\nexport class Dashboard extends Component {\n    /**\n     * @constructor\n     * TODO: make user settings a localstorage object\n     */\n    constructor(props) {\n        super(props);\n        if(this.props.accessToken === 0){\n            window.location.href = window.origin.toString();\n        }\n        let metrics = JSON.parse(localStorage.getItem('metrics'));\n        const drinkTotal = 15;\n        this.state = {\n            totalMoney: metrics.totalCost,\n            totalDrinks: metrics.numDrinks,\n            drinkPercentage: parseInt((metrics.numDrinks/drinkTotal) * 100),\n            userDrinkTotal: drinkTotal,\n            userCostTotal: 75,\n            monthSpendData: getDailyTotal(metrics),\n            time: getDailyData(metrics)\n        };\n        fetch(`https://api.boba.watch/users/${this.props.userId}/${this.props.accessToken}`\n        ).then(resp => {\n            return resp.json();\n        }).then(resp => {\n            this.setState({\n                userCostTotal: resp.budget == null ? 100 : resp.budget,\n                userDrinkTotal: resp.maxDrinks == null ? 15 : resp.maxDrinks\n            });\n        }).catch(err => {\n            swal(\"Error!\", \"I had trouble getting your settings.\", \"error\");\n        });\n    };\n    updateInfo = () => {\n        fetch(\"https://api.boba.watch/drinks/user/\" + this.props.userid, {\n        }).then((resp) => { return resp.json();\n        }).then((resp) => { stats.recalculateMetrics(resp);\n        }).catch(err => { swal(\"Error!\", `Couldn't update data. Try again later! \\nError: ${err}`, \"error\");\n        });\n    };\n    render() {\n        let width = window.innerWidth - 40;\n        return (\n        <div className=\"dashboard-page\">\n            <Typography variant=\"h4\">Monthly Spending</Typography>\n            <Card className=\"chart-holder\">\n                <div className=\"chard-holder-description\">\n                    MONTHLY LIMIT: ${this.state.userCostTotal}\n                    <br />\n                    <span>${Utils.toMoney(this.state.totalMoney, this.state.totalMoney/10000 > 1)}</span>\n                    <br />\n                    REMAINING: ${Utils.toMoney(this.state.userCostTotal*100 - this.state.totalMoney)}\n                </div>\n                <Sunburst height={width-45} width={width-45} data={sunburstData} padAngle={0.06} colorType={'literal'} />\n            </Card>\n            <div className=\"stats-holder\">\n                <Card className=\"month-total-money\">\n                    <p>This is how much you’ve spent on boba this month:</p>\n                    <Typography variant=\"h2\">${Utils.toMoney(this.state.totalMoney, this.state.totalMoney/10000 > 1)}</Typography>\n                </Card>\n                <Card className=\"month-drink-limit\">\n                    <Typography variant=\"h3\">{this.state.drinkPercentage}%</Typography>\n                    <p>to your max number of drinks this month</p>\n                </Card>\n                <Card className=\"month-total-drinks\">\n                    <Typography variant=\"h2\">{this.state.totalDrinks}</Typography>\n                    <p>drinks this month</p>\n                </Card>\n            </div>\n            <Card className=\"daily-chart\">\n                <XYPlot xType=\"ordinal\" yType=\"ordinal\" margin={60} width={width} height={1.8*width}>\n                <XAxis orientation=\"top\" />\n                <YAxis />\n                <HeatmapSeries\n                    colorType=\"literal\"\n                    style={{\n                        stroke: 'white',\n                        strokeWidth: '2px',\n                        rectStyle: {\n                            rx: 10,\n                            ry: 10\n                        }\n                    }}\n                    data={this.state.time}\n                    />\n                </XYPlot>\n            </Card>\n        </div>\n        )\n    }\n}\n\nexport default Dashboard\n","import React, { Component } from 'react';\nimport 'date-fns';\nimport swal from 'sweetalert';\nimport './styles/add.css';\nimport {Typography, TextField, Button} from '@material-ui/core';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, DateTimePicker } from 'material-ui-pickers';\nimport {withRouter} from 'react-router-dom';\nimport stats from './calculateStatistics';\n\nexport class Add extends Component {\n    state = {\n        selectedDate: new Date()\n    }\n    handleDateChange = (date) => {\n        this.setState({ selectedDate: date });\n    };\n    /**\n     * @function update\n     * TODO: implement live reload instead of using recalculate metrics\n     */\n    update = () => {\n        fetch(\"https://api.boba.watch/drinks/user/\" + this.props.userId,{\n        }).then((resp) => { return resp.json();\n        }).then((resp) => { \n            stats.recalculateMetrics(resp);\n            swal(\"Done!\", \"Drink has been added\", \"success\"); \n            this.props.toggleSelf();\n        }).catch(err => { swal(\"Error!\", `Something Went Wrong: ${err}`, \"error\");\n        });   \n    }\n    /**\n     * @function saveDrink - called when the user submits drink information to be added.\n     * Has 3 parts:\n     *  1. Gets all the user filled out info\n     *  2. Only required parameter is price and if not filled, throws error\n     *  3. Makes api call to server to add the drink with info\n     * \n     * TODO: better job of parsing the info and potentially add chips and autofill for\n     * better data processing\n     */\n    saveDrink = () => {\n        let data = {\n            drink: {\n                name: document.getElementById('name-value').value,\n                location: document.getElementById('location-value').value,\n                price: parseInt(document.getElementById('price-value').value * 100),\n                date: new Date(document.getElementById('date-value').value).toISOString(),\n                photo: \"\",\n                userId: parseInt(this.props.userId),\n                description: document.getElementById('description-value').value\n            }\n        }\n        if(document.getElementById('price-value').value === '' || \n            isNaN(parseInt(document.getElementById('price-value').value)) ||\n            parseInt(document.getElementById('price-value').value) === 0\n        ){\n            swal(\"Error!\", `Please enter a price to add drink`, \"error\");\n            return;\n        }\n        fetch(\"https://api.boba.watch/drinks/\" + this.props.accessToken, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data),\n        }).then((resp) => { this.update();\n        }).catch(err => {swal(\"Error!\", `Couldn't update drinks. Error: ${err}`, \"error\");\n        });\n    };\n    render() {\n        return (\n        <div className=\"add-modal\">\n            <Typography variant=\"h5\">Add a purchase</Typography>\n            <TextField\n                id=\"location-value\"\n                className=\"add-input\"\n                label=\"Location\"\n            />\n            <TextField\n                id=\"name-value\"\n                className=\"add-input\"\n                margin=\"dense\"\n                label=\"Drink name\"\n            />\n            <TextField\n                id=\"price-value\"\n                className=\"add-input\"\n                margin=\"dense\"\n                label=\"Price\"\n            />\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DateTimePicker\n                    id=\"date-value\"\n                    className=\"add-input\"\n                    margin=\"dense\"\n                    format=\"M/d/yyyy h:mm a\"\n                    label=\"Date picker\"\n                    value={this.state.selectedDate}\n                    onChange={this.handleDateChange}\n                />\n            </MuiPickersUtilsProvider>\n            <TextField\n                id=\"description-value\"\n                className=\"add-input\"\n                label=\"Description\"\n            />\n            <div className=\"add-button-holder\">\n                <Button onClick={this.saveDrink} className=\"add-button\">ADD</Button>\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default withRouter(Add);\n","import React, { Component } from 'react';\nimport {Typography, TextField, Button} from '@material-ui/core';\nimport swal from 'sweetalert';\nimport './styles/user.css';\n\nexport class User extends Component {\n    state = {\n        userSpendMax: 100,\n        userDrinkMax: 15,\n    };\n    componentDidMount(){\n        fetch(`https://api.boba.watch/users/${this.props.userId}/${this.props.accessToken}`\n        ).then(resp => {\n            return resp.json();\n        }).then(resp => {\n            this.setState({\n                userSpendMax: resp.budget == null ? 100 : resp.budget,\n                userDrinkMax: resp.maxDrinks == null ? 15 : resp.maxDrinks\n            });\n        }).catch(err => {\n            swal(\"Error!\", \"I had trouble getting your settings.\", \"error\");\n        });\n    };\n    updateUser = () => {\n        const data = { \n            \"user\": { \n                \"budget\": parseInt(this.state.userSpendMax),\n                \"maxDrinks\": parseInt(this.state.userDrinkMax)\n            }\n        };\n        fetch(`https://api.boba.watch/users/${this.props.userId}/${this.props.accessToken}`, {\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data),\n        }\n        ).then(resp => {\n            return resp.json();\n        }).then(resp => {\n            swal(\"Success!\", \"Updated your settings successfully.\", \"success\")\n        }).catch(err => {\n            swal(\"Error!\", \"Error updating data\", \"error\");\n        });\n    };\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n    render() {\n        return (\n        <div className=\"user-modal\">\n            <img src={localStorage.getItem('avatar')} className=\"user-avatar\" alt=\"user\"/>\n            <Typography variant=\"h5\">User settings</Typography>\n            <TextField\n                id=\"monthly-spending-input\"\n                className=\"user-input\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                onChange={this.handleChange('userSpendMax')}\n                value={this.state.userSpendMax}\n                label=\"Monthly Spending Limit\"\n            />\n            <TextField\n                id=\"monthly-drinking-limit\"\n                className=\"user-input\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                onChange={this.handleChange('userDrinkMax')}\n                value={this.state.userDrinkMax}\n                label=\"Max of drinks / month\"\n            />\n            <div className=\"update-button-holder\">\n                <Button className=\"update-button\" onClick={this.updateUser}>UPDATE</Button>\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default User;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Button} from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport swal from 'sweetalert';\nimport Utils from './textUtil.js';\nimport './styles/history.css';\n\nexport class DrinkPanel extends Component {\n    state =  {\n        open: false,\n        add: false\n    }\n    toggle = () => { \n        this.setState(state => ({ open: !state.open }));\n    }\n    toggleAdd = () => {\n        this.setState(state => ({ add: !state.add }));\n    }\n    hasImage = () => {\n        if(this.props.data.photo.trim() !== \"\" && this.props.data.photo !== \"asdf\" ){\n            return  <img alt=\"drink\" src={this.props.data.photo} />;\n        }\n    }\n    /**\n     * TODO: delete should update localstorage\n     */\n    delete = () => {\n        axios.post(\"https://api.boba.watch/drinks/delete/\" + this.props.data.id + \"/\" + this.props.accessToken)\n        .then((resp) => { this.props.getNewInfo();})\n        .catch(err => { swal('Error!', `Couldn't delete your drink. Try again later!`, 'error') });\n    }\n    edit = () => {\n        this.toggleAdd(this.delete);\n    }\n    /**\n     * TODO: if implementing edit function ever again, uncomment below code\n     */\n    render() {\n        return (\n        <div className=\"thaman-color\">\n            {/* <Modal open={this.state.add} onBackdropClick={this.toggleAdd} >\n                <div>\n                    <Add toggleSelf={this.edit}/>\n                </div>\n            </Modal> */}\n            <div className=\"history-drink-label\" onClick={this.toggle}>\n                <p className=\"drink-place\">\n                    {this.props.data.location.length > 13 \n                        ? this.props.data.location.substr(0, 10) + \"...\" \n                        : this.props.data.location }\n                </p>\n                <p className=\"drink-price\">\n                    ${Utils.toMoney(this.props.data.price)}\n                </p>\n                <div className=\"expand-icon\">\n                    {this.state.open ? <ExpandLessIcon /> : <ExpandMoreIcon/>}\n                </div>\n                <p className=\"drink-name\">\n                    {this.props.data.name.length > 13 \n                        ? this.props.data.name.substr(0, 10) + \"...\" \n                        : this.props.data.name }\n                </p>\n                <p className=\"drink-time\">\n                    {(new Date(this.props.data.date)).toDateString().substr(4)}\n                </p>\n            </div>\n            <Collapse in={this.state.open}>\n                {this.hasImage()}\n                <p className=\"drink-description\">\n                    {this.props.data.description}\n                    {JSON.stringify(new Date(this.props.data.date))}\n                </p>\n                \n                <div className=\"drink-options\">\n                    {/* <Button onClick={this.edit}>EDIT</Button> */}\n                    <Button onClick={this.delete}>DELETE</Button>\n                </div>\n            </Collapse>\n        </div>\n        )\n    }\n}\n\nexport default DrinkPanel\n","import React, { Component } from 'react';\nimport {Typography} from '@material-ui/core';\nimport DrinkPanel from './DrinkPanel';\nimport Utils from './textUtil.js';\nimport stats from './calculateStatistics';\nimport swal from 'sweetalert';\nimport './styles/history.css';\n\nexport class History extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            drinks: [<Typography variant=\"h3\" key={1}>No Drinks</Typography>],\n            sum: 0\n        };\n        if(this.props.accessToken === 0){\n            window.location.href = window.origin.toString();\n        }\n    }\n    componentDidMount(){\n        this.generate();\n    }\n    retrieveHistory = () => {\n        fetch(\"https://api.boba.watch/drinks/user/\" + this.props.userId,{\n        }).then((resp) => { return resp.json();\n        }).then((resp) => { \n            stats.recalculateMetrics(resp);\n            swal(\"Done!\", \"Drink has been deleted\", \"success\"); \n            this.generate();\n        }).catch(err => { console.log(err);\n        });   \n    }\n    generate = () => {\n        let drinks = JSON.parse(localStorage.getItem('drinksList'));\n        drinks = drinks.map(id => JSON.parse(localStorage.getItem(id)) );\n        let sum = 0;\n        let newDrinks = drinks.map((e, i) => {\n            sum += e['price'];\n            return (<DrinkPanel key={e.id} data={e} getNewInfo={this.retrieveHistory} accessToken={this.props.accessToken}/>);\n        });\n        this.setState({\n            drinks: newDrinks,\n            sum: sum\n        });\n    };\n    \n    render() {\n        return (\n        <div className=\"history-page\">\n            <Typography variant=\"h3\"> Monthly Spending</Typography>\n            <div id=\"history-spending\">\n                {this.state.drinks}\n            </div>\n            <Typography variant=\"h3\" className=\"history-total\"> <span>Monthly Total:</span> ${Utils.toMoney(this.state.sum)} </Typography>\n        </div>\n        )\n    }\n}\n\nexport default History;\n","import React, { Component } from 'react';\nimport {Typography} from '@material-ui/core';\nimport FacebookLogin from 'react-facebook-login';\nimport { withRouter } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport './styles/login.css';\nimport stats from './calculateStatistics';\nimport axios from 'axios';\n\nexport class Login extends Component {\n    successfulLogin = (userId, fbRes) => {\n        this.props.successfulLogin(userId, fbRes);\n        fetch(\"https://api.boba.watch/drinks/user/\" + userId, {\n        }).then((resp) => { return resp.json();\n        }).then((resp) => { this.storeData(resp, userId, fbRes.picture.data.url);\n        }).catch(err => { console.log(\"Error logging in: \", err);\n        });\n    };\n    /**\n     * @function storeData\n     * @param {JSON} resp - array of drink objects\n     * @param {int} userId - user id in database to get drinks of\n     * \n     * TODO: Firefox has a weird bug that doesn't make the login work out well\n     */\n    storeData = (resp, userId, avatar) => {\n        stats.recalculateMetrics(resp);\n        if(localStorage.getItem('userId') !== userId){\n            localStorage.clear();\n            localStorage.setItem('userId', userId);\n        }\n        localStorage.setItem('avatar', avatar);\n        localStorage.setItem('metrics', JSON.stringify(stats.recalculateMetrics(resp)));\n        this.props.history.push('./dash');\n    }\n\tresponseFacebook = (fbRes) => {\n        // console.log(fbRes);\n\t\taxios.post(\"https://api.boba.watch/users/login\", { fbRes })\n\t\t.then(servRes => {\n\t\t\tif (servRes.data.hasOwnProperty('userId')) {\n\t\t\t\tthis.setState(() => ({\n\t\t\t\t\tuserId: servRes.data.userId,\n\t\t\t\t\taccessToken: fbRes.accessToken\n                }), () => {this.successfulLogin(servRes.data.userId, fbRes);});\n\t\t\t}\n\t\t\telse {\n                swal(\"Error!\", `Login Unsuccessful`, \"error\");\n                // eslint-disable-next-line\n\t\t\t\tthrow 'Facebok Login Failed';\n\t\t\t}\n\t\t})\n\t\t.catch(err => console.log(err));\n    };\n\n    render() {\n        return (\n        <div className=\"login-page\">\n            <div className=\"login-logo\"></div>\n            <Typography variant=\"h1\">boba watch</Typography>\n            <FacebookLogin\n                appId=\"333104870889201\"\n                autoLoad={true}\n                cookies={true}\n                fields=\"name,email,picture\"\n\t\t\t\tcallback={this.responseFacebook}\n\t\t\t/>\n        </div>\n        )\n    }\n}\n\nexport default withRouter(Login);\n","import {createMuiTheme} from '@material-ui/core';\n\nconst theme = createMuiTheme({\n    overrides: {\n      MuiButton: {\n        text: {\n          backgroundColor: '#F68080',\n          borderRadius: 3,\n          border: 0,\n          color: 'white',\n          height: 30,\n          padding: '0 30px',\n          margin: '20px',\n          boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n          fontFamily: 'Poppins',\n          fontWeight: 700,\n          fontSize: 14\n        },\n      },\n      MuiBottomNavigation: {\n        root: {\n            backgroundColor: '#FFAFA4',\n        }\n      },\n      MuiBottomNavigationAction: {\n        root: {\n            color: '#000000',\n        },\n        iconOnly: {\n            color: '#FF0000'\n        },\n        wrapper: {\n            color: '#FFFFFF ',\n        }\n      }\n    },\n    palette: {\n        primary: {\n          main: '#F68080',\n          contrastText:'#FFFFFF'\n        },\n        secondary: {\n            main: '#FFFFFF',\n            contrastText: '#F68080',\n        },\n    },\n    typography: {\n        useNextVariants: true,\n        h1: {\n            fontFamily: 'Poppins',\n            fontWeight: 700,\n            color: '#FFFFFF',\n            fontSize: 44,\n            marginBottom: 20\n        },\n        h2: {\n            fontFamily: 'Poppins',\n            fontWeight: 700,\n            color: '#FFFFFF',\n            fontSize: 48,\n            margin: 0\n        },\n        h3: {\n            fontFamily: 'Poppins',\n            fontWeight: 700,\n            color: '#F68080',\n            fontSize: 24,\n            marginBottom: '16px'\n        },\n        h4: {\n            fontFamily: 'Poppins',\n            fontWeight: 700,\n            color: '#FFFFFF',\n            fontSize: 24,\n        },\n        h5: {\n            fontFamily: 'Poppins',\n            fontWeight: 700,\n            color: '#000000',\n            fontSize: 18,\n        },\n        h6: {\n            fontFamily: 'Poppins',\n            color: '#F68080',\n            fontSize: 12,\n        }\n    },\n});\n\nexport default theme;","import React, { Component } from 'react';\nimport {MemoryRouter as Router, Route, Link, Switch, Redirect} from 'react-router-dom';\nimport {BottomNavigation, BottomNavigationAction, Modal} from '@material-ui/core';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport DashboardIcon from '@material-ui/icons/BarChart';\nimport AddIcon from '@material-ui/icons/Add';\nimport HistoryIcon from '@material-ui/icons/AttachMoney';\nimport Dashboard from './components/Dashboard';\nimport Add from './components/Add';\nimport User from './components/User';\nimport History from './components/History';\nimport Login from './components/Login';\nimport stats from './components/calculateStatistics.js';\nimport theme from './theme';\nimport './App.css';\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            add: false,\n            user: false,\n            value: '',\n            userId: 1,\n            accessToken: 0,\n            metrics: stats.getDefaultMetrics()\n        };\n    }\n    toggleAdd = () => {\n        this.setState(state => ({\n            add: !state.add,\n        }));\n    }\n    toggleUser = () => {\n        this.setState(state => ({\n            user: !state.user,\n        }));\n    }\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n    successfulLogin = (userid, fbRes) => {\n        this.setState({\n            userId: userid,\n            accessToken: fbRes.accessToken,\n            fbRes: fbRes\n        });\n    }\n    render() {\n        return (\n            <MuiThemeProvider theme={theme}>\n                <Router basename={process.env.PUBLIC_URL} initialEntries={['/', '/dash', '/history']} initialIndex={0}>\n                    <Switch>\n                        <Route exact strict path='/' render={() => <Login successfulLogin={ this.successfulLogin }/> }/>\n                        <Route strict path='/:page' render={() => \n                            <div>\n                                <div className=\"page\">\n                                    <img src={localStorage.getItem('avatar')} alt=\"user-settings\" className=\"avatar-button\" onClick={this.toggleUser} />\n                                    <Route exact path='/dash' render={() => \n                                        <Dashboard userId={this.state.userId} accessToken={this.state.accessToken} metrics={this}/>\n                                    }/>\n                                    <Route exact path='/history' render={() => \n                                        <History accessToken={ this.state.accessToken } userId={ this.state.userId} />\n                                    }/>\n                                </div>\n                                <Modal open={this.state.add} onBackdropClick={this.toggleAdd} >\n                                    <div>\n                                        <Add accessToken={this.state.accessToken} userId={this.state.userId} toggleSelf={this.toggleAdd}/>\n                                    </div>\n                                </Modal>\n                                <Modal open={this.state.user} onBackdropClick={this.toggleUser} >\n                                    <div>\n                                        <User accessToken={this.state.accessToken} userId={this.state.userId}/>\n                                    </div>\n                                </Modal>\n                                <BottomNavigation value={this.state.value} onChange={this.handleChange} className=\"bottom-nav\">\n                                    <BottomNavigationAction\n                                        label=\"Dashboard\"\n                                        value=\"dash\"\n                                        component={Link}\n                                        to=\"/dash\"\n                                        icon={<DashboardIcon />}\n                                    />\n                                    <BottomNavigationAction\n                                        value=\"add\"\n                                        disableRipple={true}\n                                        onClick={this.toggleAdd}\n                                        onClose={this.refocus}\n                                        icon={ <div className=\"center-fab\"> < AddIcon style={{ fontSize: 50 }}/></div> }\n                                    />\n                                    <BottomNavigationAction\n                                        label=\"Spending\"\n                                        value=\"history\"\n                                        component={Link}\n                                        to=\"/history\"\n                                        icon={<HistoryIcon />}\n                                    />\n                                </BottomNavigation>\n                            </div>\n                        } />\n                        <Route render={() => <Login successfulLogin={ this.successfulLogin }/> }/>\n                    </Switch>\n                </Router>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}